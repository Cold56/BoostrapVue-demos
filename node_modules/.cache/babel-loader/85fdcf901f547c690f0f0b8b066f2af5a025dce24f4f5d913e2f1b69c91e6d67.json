{"ast":null,"code":"const now = new Date();\nconst today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\nconst minDate = new Date(today);\nminDate.setMonth(minDate.getMonth() - 2);\nminDate.setDate(15);\nconst maxDate = new Date(today);\nmaxDate.setMonth(maxDate.getMonth() + 2);\nmaxDate.setDate(15);\nexport default {\n  data() {\n    return {\n      min: minDate,\n      max: maxDate,\n      selectedDate: '',\n      context: null,\n      val: null\n    };\n  },\n  methods: {\n    onContext(ctx) {\n      this.context = ctx;\n    },\n    dateDisabledFn(ymd, date) {\n      // 获取所有的星期几\n      const weekday = date.getDay();\n      // 获取所有的几号\n      const day = date.getDate();\n      // 禁用每周周六日以及每月13号\n      return weekday === 0 || weekday === 6 || day === 13;\n    },\n    cleanDate() {\n      this.val = null;\n    },\n    setToday() {\n      this.val = today;\n    },\n    dayClass(ymd, date) {\n      const day = date.getDate();\n      let classText = '';\n      if (day > 1 && day <= 10) {\n        classText = 'table-warning';\n      } else if (day > 10 && day <= 20) {\n        classText = 'table-info';\n      }\n      return classText;\n    }\n  }\n};","map":{"version":3,"names":["now","Date","today","getFullYear","getMonth","getDate","minDate","setMonth","setDate","maxDate","data","min","max","selectedDate","context","val","methods","onContext","ctx","dateDisabledFn","ymd","date","weekday","getDay","day","cleanDate","setToday","dayClass","classText"],"sources":["src/views/CalendarView.vue"],"sourcesContent":["<template>\n  <b-container>\n    <b-row>\n      <b-col md=\"auto\">\n        <b-calendar v-model=\"selectedDate\" @context=\"onContext\" locale=\"zh-CN\"></b-calendar>\n      </b-col>\n      <b-col>\n        <p>Value:<code>{{ selectedDate }}</code></p>\n        <p class=\"mb-0\">Context</p>\n        <pre class=\"small\">\n          {{ context }}\n        </pre>\n      </b-col>\n    </b-row>\n    <hr />\n    <!-- 日历可以设置为只读或者禁用 -->\n    <b-row>\n      <b-col>\n        <b-calendar readonly locale=\"zh-CN\"></b-calendar>\n      </b-col>\n      <b-col>\n        <b-calendar disabled locale=\"zh-CN\"></b-calendar>\n      </b-col>\n    </b-row>\n    <hr />\n    <!-- 也可以限制日期数等等，date-disabled-fn用来连接限制日期的函数 -->\n    <b-row>\n      <b-col>\n        <b-calendar :min=\"min\" :max=\"max\" :date-disabled-fn=\"dateDisabledFn\" locale=\"zh-CN\"></b-calendar>\n      </b-col>\n    </b-row>\n    <hr />\n    <!-- 为日历设置样式以及交互，date-info-fn用来连接对于不同条件指定不同样式的函数 -->\n    <b-calendar block locale=\"zh-CN\" v-model=\"val\" :date-info-fn=\"dayClass\">\n    </b-calendar>\n    <b-button-group class=\"d-flex\">\n      <b-button size=\"sm\" variant=\"outline-danger\" v-if=\"val\" @click=\"cleanDate\">Clear date</b-button>\n      <b-button size=\"sm\" variant=\"outline-info\" @click=\"setToday\">Set today</b-button>\n    </b-button-group>\n  </b-container>\n</template>\n\n<script>\nconst now = new Date();\nconst today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n\nconst minDate = new Date(today);\nminDate.setMonth(minDate.getMonth() - 2);\nminDate.setDate(15);\n\nconst maxDate = new Date(today);\nmaxDate.setMonth(maxDate.getMonth() + 2);\nmaxDate.setDate(15);\n\nexport default {\n  data() {\n    return {\n      min: minDate,\n      max: maxDate,\n      selectedDate: '',\n      context: null,\n      val: null,\n    }\n  },\n  methods: {\n    onContext(ctx) {\n      this.context = ctx\n    },\n    dateDisabledFn(ymd, date) {\n      // 获取所有的星期几\n      const weekday = date.getDay()\n      // 获取所有的几号\n      const day = date.getDate()\n      // 禁用每周周六日以及每月13号\n      return weekday === 0 || weekday === 6 || day === 13\n    },\n    cleanDate() {\n      this.val = null\n    },\n    setToday() {\n      this.val = today\n    },\n    dayClass(ymd, date) {\n      const day = date.getDate()\n      let classText = ''\n      if (day > 1 && day <= 10) {\n        classText = 'table-warning'\n      } else if (day > 10 && day <= 20) {\n        classText = 'table-info'\n      }\n      return classText\n    }\n  }\n}\n</script>\n"],"mappings":"AA2CA,MAAAA,GAAA,OAAAC,IAAA;AACA,MAAAC,KAAA,OAAAD,IAAA,CAAAD,GAAA,CAAAG,WAAA,IAAAH,GAAA,CAAAI,QAAA,IAAAJ,GAAA,CAAAK,OAAA;AAEA,MAAAC,OAAA,OAAAL,IAAA,CAAAC,KAAA;AACAI,OAAA,CAAAC,QAAA,CAAAD,OAAA,CAAAF,QAAA;AACAE,OAAA,CAAAE,OAAA;AAEA,MAAAC,OAAA,OAAAR,IAAA,CAAAC,KAAA;AACAO,OAAA,CAAAF,QAAA,CAAAE,OAAA,CAAAL,QAAA;AACAK,OAAA,CAAAD,OAAA;AAEA;EACAE,KAAA;IACA;MACAC,GAAA,EAAAL,OAAA;MACAM,GAAA,EAAAH,OAAA;MACAI,YAAA;MACAC,OAAA;MACAC,GAAA;IACA;EACA;EACAC,OAAA;IACAC,UAAAC,GAAA;MACA,KAAAJ,OAAA,GAAAI,GAAA;IACA;IACAC,eAAAC,GAAA,EAAAC,IAAA;MACA;MACA,MAAAC,OAAA,GAAAD,IAAA,CAAAE,MAAA;MACA;MACA,MAAAC,GAAA,GAAAH,IAAA,CAAAhB,OAAA;MACA;MACA,OAAAiB,OAAA,UAAAA,OAAA,UAAAE,GAAA;IACA;IACAC,UAAA;MACA,KAAAV,GAAA;IACA;IACAW,SAAA;MACA,KAAAX,GAAA,GAAAb,KAAA;IACA;IACAyB,SAAAP,GAAA,EAAAC,IAAA;MACA,MAAAG,GAAA,GAAAH,IAAA,CAAAhB,OAAA;MACA,IAAAuB,SAAA;MACA,IAAAJ,GAAA,QAAAA,GAAA;QACAI,SAAA;MACA,WAAAJ,GAAA,SAAAA,GAAA;QACAI,SAAA;MACA;MACA,OAAAA,SAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}