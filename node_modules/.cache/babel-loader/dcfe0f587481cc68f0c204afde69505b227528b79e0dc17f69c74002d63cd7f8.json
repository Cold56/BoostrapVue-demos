{"ast":null,"code":"export default {\n  data() {\n    return {\n      testInput: '',\n      afterSubmit: '',\n      checkbox1: 'not_accepted',\n      checkbox3: [],\n      datepicker1: null,\n      checkbox3Options: [{\n        name: 'Field1',\n        item: 'field1',\n        notEnabled: false\n      }, {\n        name: 'Field2',\n        item: 'field2',\n        notEnabled: false\n      }, {\n        name: 'Field3',\n        item: 'field3',\n        notEnabled: true\n      }],\n      showAlert: false,\n      // 控制b-alert显示的属性\n      alertType: 'success',\n      color: [],\n      // 如果是多选用这个，如果是单选用{}或者null\n      file1: null,\n      name1: '',\n      radioVal1: null,\n      ratingVal1: null\n    };\n  },\n  methods: {\n    onSubmit(evt) {\n      evt.preventDefault();\n      if (this.testInput !== '') {\n        this.afterSubmit = this.testInput; // 更新要显示的信息\n        this.alertType = 'success';\n      } else {\n        this.afterSubmit = 'You have not input anything!';\n        this.alertType = 'warning';\n      }\n      if (this.checkbox1 === 'accepted') {\n        this.showAlert = true; // 显示b-alert\n      }\n    },\n    onReset(evt) {\n      evt.preventDefault();\n      this.testInput = '';\n      this.afterSubmit = '';\n      this.showAlert = false; // 隐藏b-alert\n    }\n  },\n  computed: {\n    //计算属性不需要初始值\n    checkAll: {\n      get() {\n        return this.color.length === 5 && !this.color.includes('all');\n      },\n      set(value) {\n        if (value) {\n          this.color = ['green', 'yellow', 'red', 'white', 'grey'];\n        } else if (!value) {\n          this.color = [];\n        }\n      }\n    },\n    invalidFeedback() {\n      if (this.name1.length <= 4) {\n        return \"Plz input your name\";\n      }\n    },\n    validFeedback() {\n      if (this.name1.length > 4) {\n        return \"It is valid\";\n      }\n    },\n    radioState() {\n      return Boolean(this.radioVal1);\n    }\n  }\n};","map":{"version":3,"names":["data","testInput","afterSubmit","checkbox1","checkbox3","datepicker1","checkbox3Options","name","item","notEnabled","showAlert","alertType","color","file1","name1","radioVal1","ratingVal1","methods","onSubmit","evt","preventDefault","onReset","computed","checkAll","get","length","includes","set","value","invalidFeedback","validFeedback","radioState","Boolean"],"sources":["src/views/FormView.vue"],"sourcesContent":["<template>\n  <b-container>\n    <b-form @submit=\"onSubmit\" @reset=\"onReset\">\n      <!-- 输入框 -->\n      <b-form-input v-model=\"testInput\" type=\"text\" placeholder=\"Plz type here!\" class=\"mb-2\"></b-form-input>\n      <!-- 复选框，并使用value指定选中和不选中的值 -->\n      <b-form-checkbox v-model=\"checkbox1\" value=\"accepted\" unchecked-value=\"not_accepted\">I accept the terms and\n        use</b-form-checkbox>\n      <b-button type=\"submit\" class=\"mr-2\" variant=\"success\">Submit!</b-button>\n      <b-button type=\"reset\" class=\"mr-2\" variant=\"outline-danger\">Reset!</b-button>\n    </b-form>\n    <hr />\n    <!-- 使用feedback来输出不同的提醒 -->\n    <b-form-valid-feedback :state=\"checkbox1 === 'accepted'\">This is what you have inputed:&emsp;{{ testInput\n      }}</b-form-valid-feedback>\n    <b-form-invalid-feedback :state=\"checkbox1 === 'accepted'\">Plz accept the terms first</b-form-invalid-feedback>\n    <hr />\n    <!-- 使用:show来根据showAlert的值显示或隐藏b-alert -->\n    <b-alert :show=\"showAlert\" :variant=\"alertType\">{{ afterSubmit }}</b-alert>\n    <hr />\n\n    <!-- 复选框组合，用来产生爱好列表（这里使用switches把勾选变成开关） -->\n    <b-form-checkbox-group switches v-model=\"color\">\n      <b-form-fieldset>Pick the colors you prefer</b-form-fieldset>\n      <b-form-checkbox style=\"background-color:green\" value=\"green\">Green</b-form-checkbox>\n      <b-form-checkbox style=\"background-color:yellow\" value=\"yellow\">Yellow</b-form-checkbox>\n      <b-form-checkbox style=\"background-color:red\" value=\"red\">Red</b-form-checkbox>\n      <b-form-checkbox value=\"white\">White</b-form-checkbox>\n      <b-form-checkbox style=\"background-color:grey\" value=\"grey\">grey</b-form-checkbox>\n    </b-form-checkbox-group>\n    <!-- 通过对自己使用计算属性来实时更新自己和他人的值 -->\n    <b-form-checkbox type=\"checkbox\" v-model=\"checkAll\">all</b-form-checkbox>\n    <p v-if=\"color.length !== 0\">{{ color }}</p>\n    <hr />\n    <!-- 使用数组来 创建并管理复选框组 -->\n    <!-- stacked可以让内容不挤在一行，buttons把复选框变成按钮（被选中的颜色会加深），options后面接的是待使用的数组，value-field会提取数组中的item作为值，后面的field同理（显示文本、是否启用） -->\n    <b-form-checkbox-group button-variant=\"success\" buttons stacked :options=\"checkbox3Options\" v-model=\"checkbox3\"\n      value-field=\"item\" text-field=\"name\" disabled-field=\"notEnabled\">\n    </b-form-checkbox-group>\n    {{ checkbox3 }}\n    <hr />\n    <!-- 表单日期选定，当然可以和b-calendar一样添加readonly或者disabled、:min以及:max等等属性。这里我还使用date-format-options控制了年月显示方式 -->\n    <b-form-datepicker v-model=\"datepicker1\"\n      :date-format-options=\"{ year: 'numeric', month: 'numeric', day: 'numeric' }\"></b-form-datepicker>\n    <hr />\n    <!-- 文件管理，添加plain就会变成只能点击添加，添加mutiple允许多个文件，使用accept限制只能上传图像文件 -->\n    <b-form-file v-model=\"file1\" multiple accept=\"image/*\" placeholder=\"Choose a image or drop it here\"\n      drop-placeholder=\"Drop here\"></b-form-file>\n    <div class=\"mt-3\">\n      Selected file:<span v-for=\"(val, index) in file1\" :key=\"index\">{{ val ? val.name : '' }}</span>\n    </div>\n    <hr />\n    <!-- 更炫酷的表示方法 -->\n    <b-form-file multiple>\n      <!-- 插槽充当file-name（接收name），接收到的数据存入names数组 -->\n      <template slot=\"file-name\" slot-scope=\"{names}\">\n        <b-badge variant=\"dark\">{{ names[0] }}</b-badge>\n        <b-badge v-if=\"names.length > 1\" variant=\"dark\" class=\"ml-1\"> + {{ names.length - 1 }}More files</b-badge>\n      </template>\n    </b-form-file>\n    <hr />\n    <!-- 使用feedback，同时需要对内部组件进行状态判定才可以让feedback生效 -->\n    <b-form-group description=\"Input your name\" label=\"Name\" :valid-feedback=\"validFeedback\"\n      :invalid-feedback=\"invalidFeedback\">\n      <b-form-input v-model=\"name1\" :state=\"name1.length > 4\" trim></b-form-input>\n    </b-form-group>\n    <hr />\n    <!-- 单选框 -->\n    <b-form-radio-group v-model=\"radioVal1\">\n      <b-form-radio value=\"A\">A</b-form-radio>\n      <b-form-radio value=\"B\">B</b-form-radio>\n      <b-form-radio value=\"C\">C</b-form-radio>\n      <b-form-radio :value=\"{ D: 'this is D' }\">D</b-form-radio>\n      <b-form-invalid-feedback :state=\"radioState\">Plz select one</b-form-invalid-feedback>\n      <b-form-valid-feedback :state=\"radioState\">Thank u</b-form-valid-feedback>\n    </b-form-radio-group>\n    <p>{{ radioVal1 }}</p>\n    <hr />\n    <!-- 使用rating进行打分，使用stars来控制星星数量（默认为5），并设置数量显示（在右侧） -->\n    <label>Plz rating for us</label>\n    <b-form-rating v-model=\"ratingVal1\" stars=\"10\" show-value show-value-max>\n    </b-form-rating>\n  </b-container>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      testInput: '',\n      afterSubmit: '',\n      checkbox1: 'not_accepted',\n      checkbox3: [],\n      datepicker1: null,\n      checkbox3Options: [{\n        name: 'Field1',\n        item: 'field1',\n        notEnabled: false,\n      }, {\n        name: 'Field2',\n        item: 'field2',\n        notEnabled: false,\n      }, {\n        name: 'Field3',\n        item: 'field3',\n        notEnabled: true,\n      }],\n      showAlert: false, // 控制b-alert显示的属性\n      alertType: 'success',\n      color: [],// 如果是多选用这个，如果是单选用{}或者null\n      file1: null,\n      name1: '',\n      radioVal1: null,\n      ratingVal1: null,\n    }\n  },\n  methods: {\n    onSubmit(evt) {\n      evt.preventDefault();\n      if (this.testInput !== '') {\n        this.afterSubmit = this.testInput; // 更新要显示的信息\n        this.alertType = 'success'\n      } else {\n        this.afterSubmit = 'You have not input anything!';\n        this.alertType = 'warning';\n      }\n      if (this.checkbox1 === 'accepted') {\n        this.showAlert = true; // 显示b-alert\n      }\n    },\n    onReset(evt) {\n      evt.preventDefault();\n      this.testInput = '';\n      this.afterSubmit = '';\n      this.showAlert = false; // 隐藏b-alert\n    },\n  },\n  computed: {//计算属性不需要初始值\n    checkAll: {\n      get() {\n        return this.color.length === 5 && !this.color.includes('all')\n      },\n      set(value) {\n        if (value) {\n          this.color = ['green', 'yellow', 'red', 'white', 'grey'];\n        } else if (!value) {\n          this.color = [];\n        }\n      }\n    },\n    invalidFeedback() {\n      if (this.name1.length <= 4) {\n        return \"Plz input your name\"\n      }\n    },\n    validFeedback() {\n      if (this.name1.length > 4) {\n        return \"It is valid\"\n      }\n    },\n    radioState() {\n      return Boolean(this.radioVal1)\n    }\n  }\n}\n</script>"],"mappings":"AAsFA;EACAA,KAAA;IACA;MACAC,SAAA;MACAC,WAAA;MACAC,SAAA;MACAC,SAAA;MACAC,WAAA;MACAC,gBAAA;QACAC,IAAA;QACAC,IAAA;QACAC,UAAA;MACA;QACAF,IAAA;QACAC,IAAA;QACAC,UAAA;MACA;QACAF,IAAA;QACAC,IAAA;QACAC,UAAA;MACA;MACAC,SAAA;MAAA;MACAC,SAAA;MACAC,KAAA;MAAA;MACAC,KAAA;MACAC,KAAA;MACAC,SAAA;MACAC,UAAA;IACA;EACA;EACAC,OAAA;IACAC,SAAAC,GAAA;MACAA,GAAA,CAAAC,cAAA;MACA,SAAAnB,SAAA;QACA,KAAAC,WAAA,QAAAD,SAAA;QACA,KAAAU,SAAA;MACA;QACA,KAAAT,WAAA;QACA,KAAAS,SAAA;MACA;MACA,SAAAR,SAAA;QACA,KAAAO,SAAA;MACA;IACA;IACAW,QAAAF,GAAA;MACAA,GAAA,CAAAC,cAAA;MACA,KAAAnB,SAAA;MACA,KAAAC,WAAA;MACA,KAAAQ,SAAA;IACA;EACA;EACAY,QAAA;IAAA;IACAC,QAAA;MACAC,IAAA;QACA,YAAAZ,KAAA,CAAAa,MAAA,gBAAAb,KAAA,CAAAc,QAAA;MACA;MACAC,IAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAhB,KAAA;QACA,YAAAgB,KAAA;UACA,KAAAhB,KAAA;QACA;MACA;IACA;IACAiB,gBAAA;MACA,SAAAf,KAAA,CAAAW,MAAA;QACA;MACA;IACA;IACAK,cAAA;MACA,SAAAhB,KAAA,CAAAW,MAAA;QACA;MACA;IACA;IACAM,WAAA;MACA,OAAAC,OAAA,MAAAjB,SAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}